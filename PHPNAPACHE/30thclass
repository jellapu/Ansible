---
Ansible collections:
 collections is a distrubute format of roles and mosules


We will create one Instance
i.e.,
Launch instance and then
do this

ssh -i .\ansible.pem ubuntu@public ip
sudo apt get update
sudo adduser ansible
Create password:
reneter:
sudo vi /etc/ssh/sshd_config
     passwordauthe yes
sudo service sshd restart
sudo visudo
  ansible ALL=(ALL:All) NoPASSSWD:ALL
su ansible
passowrd:
cd ~
sudo apt update  # checking correctly
 check install ansible in google
sudo apt install software-properties-common
sudo add-apt-repository --yes --update ppa:ansible/ansible
sudo apt install ansible 
ansible --version
sudo vi /etc/ansible/hosts
  localhost
ssh-keygen
ssh-copy-id ansible@localhost
password:
ansible -m ping all #config wrkng

ssh ansible@ip
ansible--version
ansible-galaxy collection install community.mysql
sudo apt install tree -y
cd ~/.ansible/collections/ansible_collections/community/mysql/
tree
exit


git repository:
Ansible collections can be installed from git repository
ansible-galaxy collection install git+<url>,<branch>


ssh ansible@public ip
password:
ansible-galaxy collection install git+repo,main
exit


requirements.yml file:

ansible galaxy -->serach mysql-->filter-->role
will select girlinguy
so we have to write file


mkdir test
cd test/
vi requirements.yml
---
roles:
- name: geerlingguy.mysql
  version: 3.3.2

collections:
- name: geerlingguy.php_roles
  version: 1.0.0
  source: https://galaxy.ansible.com/
- name: https://github.com/jellapu/Ansible.git
  type: git
  version: master
ansible-galaxy install -r requiremnts.yml
ansible-galaxy collection list

vi collectiondemo.yaml
--
- hosts: all
  become: yes
  collections:
    - geerlingguy.php_roles

  roles:
    - php
ansible-playbook --syntax-check collectiondemo.yml
ansible-playbook collectiondemo.yml

Creating a collection skeleton:
cd ~
mkdir collections
cd collections/
ansible-galaxy collection init qt.tomcat
ls
tree

Exercise: Try to copy our tomcat role in the roles folder and publish this whole folder to the new git repository and use from another playbook.

Ansible Vault:
 While using Ansible, you may require to protect some confidential or secret information in playbooks, This may include
SSH private and public keys
passwords
Storing sensitive information in plain text is not recommended.
Ansible provides us with a feature known as Ansible Vault, which helps secure secret information.
Ansible Vault can encrypt variables, entire files and YAML Playbooks

ssh ansible@public ip
password:
mkdir vaultdemo
cd vaultdemo/
ansible-vault create mysecrets.yml
passowrd: 
reenter password:

username: tomcat
password: tomcat

cat mysecrets.yml
ansible-vault view mysecrets.yml
ansible-vault edit mysecrets.yml
password:
#will change smthing like tomcat@123 at password
cat mysecrets.yml
ansible-vault view mysecrets.yml
ansible-vault rekey mysecrets.yml
cat home.txt
vi home.txt
This is file
cat home.txt
ansible-vault encrypt home.txt
cat home.txt
ansible-vault decrypt home.txt
cat home.txt
ansible-vault encrypt_string '<value to be encrypted>' --name '<variable name>'
ansible-vault encrypt_string 'tomcat' --name 'username'

cd vaultdemo/
vi deploy.yml

ansible-valult encrypt deploy.yml
password:
ansibleplaybook deploy.yml --ask-vault-pass
password:
cat deply.yml
ansible-vault --help
ansible-vault encrypt --help
ansible-vault decrypt deploy.yml
ansible-vault create --help
vi password.txt

this is password

ansible-vault encrypt --help
ansible-vault encrypt deploy.yml --vault-password-file passowrd.txt
cat deploy.yml
ansible-playbook deploy.yml vault-password-file password.txt


Ansible with Windows:
 we will see th video



















 
